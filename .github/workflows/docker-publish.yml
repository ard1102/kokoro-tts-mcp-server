name: Build and Publish Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: rockstar837/kokoro-tts-mcp-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: rockstar837
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=Kokoro TTS MCP Server
          org.opencontainers.image.description=MCP Server for Kokoro Text-to-Speech with Docker support
          org.opencontainers.image.url=https://github.com/ard1102/kokoro-tts-mcp-server
          org.opencontainers.image.source=https://github.com/ard1102/kokoro-tts-mcp-server
          org.opencontainers.image.vendor=rockstar837
          org.opencontainers.image.licenses=MIT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Docker Hub description
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
      uses: peter-evans/dockerhub-description@v4
      with:
        username: rockstar837
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: ${{ env.IMAGE_NAME }}
        readme-filepath: ./README.md

  test-deployment:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Test Docker image
      run: |
        echo "Testing Docker image: ${{ env.IMAGE_NAME }}:latest"
        docker run --rm ${{ env.IMAGE_NAME }}:latest python --version
        docker run --rm ${{ env.IMAGE_NAME }}:latest python -c "import kokoro_tts_mcp; print('âœ… MCP Server loaded successfully')"
        
    - name: Health check test
      run: |
        echo "Starting container for health check..."
        docker run -d --name test-container -p 3000:3000 ${{ env.IMAGE_NAME }}:latest
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container
        docker rm test-container
        echo "ðŸŽ‰ Health check passed!"